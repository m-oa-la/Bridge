@model BridgeMVC.Models.BList
@{ 
    var LBlistType = ViewBag.LBlistType; 

}

<div class="form-group" hidden>
    @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group" hidden>
    @Html.LabelFor(model => model.BridgeModule, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.BridgeModule, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BridgeModule, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ListType, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">

        @Html.DropDownListFor(model => model.ListType,
new List<SelectListItem> { new SelectListItem { Text = Model.ListType, Value = Model.ListType } },
new { @class = "form-control", id = "selectListType" })
    </div>
</div>



<div class="form-group">
    @Html.LabelFor(model => model.ListItem, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ListItem, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ListItem, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UpperLvl, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.UpperLvl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UpperLvl, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
</div>

<script>
    var LBlistType = @Html.Raw(Json.Encode(LBlistType));
    SetupDropdownList("selectListType", LBlistType, "ListItem");
</script>