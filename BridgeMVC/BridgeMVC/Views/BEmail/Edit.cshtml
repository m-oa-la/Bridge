@model BridgeMVC.Models.BEmail
@{
    ViewBag.Title = "Edit";
    var Job = ViewBag.Job;
    var IORA = ViewBag.IORA;
    var TargetUser = ViewBag.TargetUser;
    var FinancialSet = ViewBag.FinancialSet;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BEmail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Tag)

        <div class="form-group">
            @Html.LabelFor(model => model.BridgeModule, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BridgeModule, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BridgeModule, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TemplateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TemplateName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TemplateName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MailTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MailCC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailCC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailCC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MailTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailTitle, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MailBody, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailBody, new { htmlAttributes = new { @class = "form-control", style = "height:300px" } })
                @Html.ValidationMessageFor(model => model.MailBody, "", new { @class = "text-danger" })
            </div>
        </div>
        <input value="Test Formula" class="btn btn-info" id="toTestFormula" style="float:right" readonly />
        <div class="form-group">
            <textarea name="Text1" cols="100" rows="5" id="testFormulaResult" class="form-control"></textarea>
        </div>
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.mailAttach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mailAttach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mailAttach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div id="grammer1">
   
</div>
<div id="grammer2">

</div>
<script>
    var Job = @Html.Raw(Json.Encode(Job));
    var iORA = @Html.Raw(Json.Encode(IORA));
    var TargetUser = @Html.Raw(Json.Encode(TargetUser));
    var FinancialSet = @Html.Raw(Json.Encode(FinancialSet));

    $("#toTestFormula").click(function () {
        $("#testFormulaResult").html(eval($("#MailBody").val()));
    });

    $("#grammer1").html("[[Job]]: " + JSON.stringify(Job))
    $("#grammer2").html("[[TargetUser]]: " + JSON.stringify(TargetUser))
    console.log("Job Example");
    console.log(Job);
    console.log("TargetUser Example");
    console.log(TargetUser);
    console.log("iORA");
    console.log(iORA);
    console.log("Change line: %0D%0A%0D%0A")

</script>