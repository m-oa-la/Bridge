@model IEnumerable<BridgeMVC.Models.Job>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
    string BridgeLastUsed = (string)Session["BridgeModule"];
    string UserSignature = (string)Session["UserSignature"];
    var LUser = ViewBag.LUser;
    var US = ViewBag.userSig;

    BridgeMVC.Models.BBridge bridge = (BridgeMVC.Models.BBridge)ViewBag.bridge;
    string bridgeLongName = bridge.BridgeLongName;
    List<string> taskNames = bridge.TaskName.Split(';').ToList<string>();
    var jobNum = Model.Count();
    int TotalFee = 0;
           
}

<div class="title">
    MY BRIDGE JOBLIST - @bridgeLongName

</div>
<hr />

@using (Html.BeginForm())
{
    <table>
        <colgroup>
            <col span="1" style="width: 15%;">
            <col span="1" style="width: 70%;">
            <col span="1" style="width: 15%;">
            <col span="1" style="width: 80px;">
        </colgroup>
        <tr>
            <td>
                @Html.TextBox("SearchString", null, new { @class = "form-control" })

            </td>
            <td>
                <input type="submit" value="Search" />
            </td>

            <td style="float:right">
                <select id="userSig" name="userSig" class="form-control"></select>
            </td>
            <td>
                <input type="submit" value="Change User" />
            </td>
        </tr>
    </table>
}
<br />

<table id="sortTable" class="table table-mid-align-rows hoverRow" style="table-layout:fixed;">
    <colgroup>
        <col span="1" style="width: 21%;">
        <col span="1" style="width: 120px;">
        <col span="1" style="width: 24%;">
        <col span="1" style="width: 24%;">
        <col span="1" style="width: 35px">
        <col span="1" style="width: 35px">
        <col span="1" style="width: 35px">
        <col span="1" style="width: 50px">
        <col span="1" style="width: 24%;">
        <col span="1" style="width: 66px">
    </colgroup>
    <tr>
        <th onclick="sortTable(0)"> JOB ID       <div class="arrows"> &#11046 </div> </th>
        <th onclick="sortTable(1)"> PROGRESS     <div class="arrows"> &#11046 </div> </th>
        <th onclick="sortTable(2)"> CUSTOMER     <div class="arrows"> &#11046 </div> </th>
        <th onclick="sortTable(3)"> PROJECT NAME <div class="arrows"> &#11046 </div> </th>
        @{ int col = 4; }
        @foreach (string taskname in taskNames)
        {
            <th onclick="sortTable(@col)"> @taskname <div class="arrows"></div> </th>
            col++;
        }
        <th onclick="sortTable(@col)"> IORA STATUS <div class="arrows"> &#11046 </div>  </th>
        @{ col++; }
        <th onclick="sortTable(@col)"> DAYS <div class="arrows"> &#11046 </div>  </th>

        @*<th>            @Html.DisplayNameFor(model => model.TaskHandler)        </th>
        <th>            @Html.DisplayNameFor(model => model.Completed)        </th>*@
    </tr>

    @foreach (var item in Model)
    {
        if (item.Fee != null)
        {
            TotalFee += (int)item.Fee;
        }

        string npsJobName = item.NpsJobName;
        if (string.IsNullOrEmpty(npsJobName))
        {
            npsJobName = item.ProdDescription;
        }

        string classT1 = "classT" + item.Task1;
        string classT2 = "classT" + item.Task2;

        if (classT2 == "classTTASK")
        {
            classT2 = "classTTASKIORA";
        }

        string classT3 = "classT" + item.Task3;
        string classT4 = "classT" + item.Task4;
        string editlink1 = "'/Job/CommonTask1/" + item.Id + "'";
        string editlink2 = "'/Job/IsIORAExisting/" + item.Id + "'";
        string editlink3 = "'/Job/CommonTask3/" + item.Id + "'";
        string editlink4 = "'/Job/CommonTask4/" + item.Id + "'";
        string linkNcertReporting = "'/Job/NCertReporting/" + item.Id + "'";
        string t2tag = "T2TAG" + item.Task2 + "T2TAG";

        string daysSince = "0";
        string receivedClass = "";
        if (item.ReceivedTime != null)
        {
            TimeSpan timeSpan = DateTime.Now - (DateTime)item.ReceivedTime;
            double days = timeSpan.TotalDays;
            if (days > 60)
            {
                receivedClass = "color: red;";
            }
            else if (days > 30)
            {
                receivedClass = "color: orange;";
            }
            daysSince = days.ToString("0.0");
        }




        <tr class="jobList">
            <td>
                <p> @Html.DisplayFor(modelItem => item.NpsJobId) </p>
            </td>
            <td>
                <div style="background-color:lightgray; cursor: pointer; width:100%;" onclick="location.href=@linkNcertReporting">

                    <div style="background-color:green;width:66.66%;position:relative;top:0px;height:24px;margin:0px">
                        <div style="color:white; margin:auto;">
                            bhrs
                        </div>
                    </div>
                </div>
            </td>
            <td>
                <p> @Html.DisplayFor(modelItem => item.CustomerName) </p>
            </td>
            <td>
                <p> @npsJobName </p>
            </td>
            
            <td>
                <div class="@classT1" onclick="location.href=@editlink1">
                    @Html.DisplayFor(modelItem => item.Task1)
                </div>
            </td>
            <td>
                <div class="@classT2" onclick="location.href=@editlink2" align="center" tag="@t2tag">
                    @Html.DisplayFor(modelItem => item.Task2)
                </div>
            </td>

            <td>
                <div class="@classT3" onclick="location.href=@editlink3">
                    @Html.DisplayFor(modelItem => item.Task3)
                </div>
            </td>

            @*<td class="@classT3" onclick="location.href=@editlink3" style="width: 25px;">
                    @Html.DisplayFor(modelItem => item.Task3)
                </td> *@
            <td>
                <div class="@classT4" onclick="location.href=@editlink4">
                    @Html.DisplayFor(modelItem => item.Task4)
                </div>
            </td>
            <td>
                <p>
                    @if (!string.IsNullOrEmpty(item.IoraDbId))
                    {
                        @Html.DisplayFor(modelItem => item.IoraDbId)
                    }
                </p>
            </td>
            <td style="text-align:right; @receivedClass">
                @daysSince
            </td>
        </tr>
     }
</table>
<br /><br /><br />

@*Stats *@
<div> <strong> In total: </strong> </div>
<div> Jobs: @jobNum </div>
<div> Fee: @TotalFee NOK </div>
<hr />


<script type="text/javascript">
    var LUser = @Html.Raw(Json.Encode(LUser));
    var us = @Html.Raw(Json.Encode(US));

    $("#userSig").append(new Option(us, us));

    $.each(LUser, function (key, data) {
        $("#userSig").append(new Option(data.Signature, data.Signature));
    });
       
</script>
