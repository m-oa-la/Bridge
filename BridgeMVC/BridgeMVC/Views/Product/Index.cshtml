@model IEnumerable<BridgeMVC.Models.Product>

@{
    Layout = null;
    var sn = 0;
    var Job = ViewBag.Job;
    var LMainProdType = ViewBag.LMainProdType;
    var LSubProdType = ViewBag.LSubProdType;
}


<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bridge</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")

    <style>
        body {
            font: Avenir Next;
        }

        table, tr {
            border-style: hidden;
        }

        .control-label {
            font-weight: bold;
        }
    </style>
</head>


<h4 style="margin-top:1px">Products <span style="float:right; padding-right:4em"> @Html.ActionLink("Add New", "Create")</span></h4>


<tr></tr>
@foreach (var item in Model)
{
    sn += 1;
    <div style="border:groove;border-color:aliceblue;padding:12px">
        <table>
                <tr>
                <td class="control-label ">Subject</td>
                <td class="form-group col-lg-3" id="Subject_@item.Id">

                    @Html.EditorFor(modelItem => item.DbJobId, new { htmlAttributes = new { @class = "form-control" } })
                </td>
            </tr>

        </table>

    </div>

}

<br />



<script>

    var LMainProdType = @Html.Raw(Json.Encode(LMainProdType));
    var LSubProdType = @Html.Raw(Json.Encode(LSubProdType));
    var Job = @Html.Raw(Json.Encode(Job));
    var sn = @sn;
    console.log(sn);


    function saveTCItem(itemId) {
        console.log(itemId);
        var Subject = $("#Subject_" + itemId).children().eq(0).val();
        var SubProdType = $("#SubProdType_" + itemId).children().eq(0).val();
        var GudianceNote = $("#GN_" + itemId).children().eq(0).val();
        var RuleRef = $("#RuleRef_" + itemId).children().eq(0).val();
        var Condition = $("#Condition_" + itemId).children().eq(0).val();

        //console.log(Subject);
        //console.log(SubProdType);
        //console.log(GudianceNote);
        //console.log(RuleRef);
        //console.log(Condition);

        callSaveBTCApi(itemId, Subject, SubProdType, GudianceNote, RuleRef, Condition)

    }

    function callSaveBTCApi(itemId, Subject, SubProdType, GudianceNote, RuleRef, Condition) {
        $.ajax(
            {
                type: 'GET',
                url: '/BTechChecklist/SaveBTCItem',
                data: { itemId: itemId, Subject: Subject, SubProdType: SubProdType, GudianceNote: GudianceNote, RuleRef: RuleRef, Condition: Condition },

                success: function (data) {

                    console.log(data);
                },
                error: function (e) {
                    alert('Error: ' + e);

                }
            });
    }



    var subProdDropdowns = $('*[id^="selectSubProdType"]');

    for (index = 0; index < subProdDropdowns.length; ++index) {

        $.each(LSubProdType, function (key, data) {
            if (data.UpperLvl == "LifeLife-Saving appliances") {
                subProdDropdowns[index].append(new Option(data.ListItem, data.ListItem));
            }
        });

        subProdDropdowns[index].append(new Option("All", "All"));

    };




</script>
