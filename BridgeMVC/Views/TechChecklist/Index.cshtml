@model IEnumerable<BridgeMVC.Models.TechChecklist>
@{
    Layout = null;
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bridge</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script language="JavaScript" type="text/javascript" src="~/Scripts/bridgeScript.js"></script>
    <style>

        body {
            font: Avenir Next;
        }

        input[type=checkbox] {
            /* Double-sized Checkboxes */
            -ms-transform: scale(2); /* IE */
            -moz-transform: scale(2); /* FF */
            -webkit-transform: scale(2); /* Safari and Chrome */
            -o-transform: scale(2); /* Opera */
            padding: 10px;
        }

        /* Might want to wrap a span around your checkbox text */
        .checkboxtext {
            /* Checkbox text */
            font-size: 110%;
            display: inline;
        }
    </style>
</head>


<table class="table">
    <colgroup>
        <col span="1" style="width: 5%;">
        <col span="1" style="width: 20%;">
        <col span="1" style="width: 40%;">
        <col span="1" style="width: 45%;">

        <col span="1" style="width: 5%;">
        <col span="1" style="width: 5%;">

    </colgroup>
    <tr>
        <th>
            Item No.
        </th>
        <th>
            Subject
        </th>
        <th>
            Rule reference
        </th>
        <th>
            Guidance
        </th>

        <th>
            YES
        </th>
        <th>
            NA
        </th>
    </tr>

    @foreach (var item in Model)
    {
        
        string fOK = "fOK(\"" + item.Id + "\")";
        string fNA = "fNA(\"" + item.Id + "\")";

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TCNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TCSubject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TCRuleRef)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TCGuidance)
            </td>
            @*<td>
                    @Html.EditorFor(modelItem => item.TCNote, new { htmlAttributes = new { @class = "form-control" } })
                </td>*@
            <td>
                @Html.EditorFor(modelItem => item.TCOK, new { htmlAttributes = new { @id = item.Id + "OK", @onclick = @fOK } })

            </td>
            <td>
                @Html.EditorFor(modelItem => item.TCNA, new { htmlAttributes = new { @id = item.Id + "NA", @onclick = @fNA } })

            </td>
        </tr>
    }
</table>
<script>







   function fOK(id)
   {
       var cOK = id + "OK";
       var cNA = id + "NA";
       var s = document.getElementById(cOK).checked;

       if (s) {
           document.getElementById(cNA).checked = false;
       }

       var tcokvalue = document.getElementById(cOK).checked;
       var tcnavalue = document.getElementById(cNA).checked;


       updateTC(id, tcokvalue, tcnavalue);
    } 

    function fNA(id) {
        var cOK = id + "OK";
        var cNA = id + "NA";
        var s = document.getElementById(cNA).checked;

        if (s) {
            document.getElementById(cOK).checked = false;
        }
        var tcokvalue = document.getElementById(cOK).checked;
        var tcnavalue = document.getElementById(cNA).checked;

        updateTC(id, tcokvalue, tcnavalue);
    } 


    function updateTC(tcid, tcokvalue, tcnavalue) {

        console.log(tcid);

        return $.ajax({
            type: 'POST',
            url: '/TechChecklist/UpdateTCAPI/',
            data: { tcID: tcid, tcOKValue: tcokvalue, tcNAValue: tcnavalue },
            cache: false,
            success: checkout
        });
    }

    function checkout(data) {
        console.log(data);
    }


    //else
    //{
    //    ct1 = $("#selectCertType").val();

    //    return $.ajax({
    //        type: 'GET',
    //        url: '/Job/M1_Task1_BudgetHourCalc',
    //        data: { bm_f: bm, ct_f: ct1 },
    //        cache: false,
    //        success: calcBudgetHour
    //    });
    //}
    //}

 

 




</script>