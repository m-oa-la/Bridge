@model IEnumerable<BridgeMVC.Models.BList>

<style>
    
    .blistTable {
        display: table;
        float: left;
        margin: 1em;
        width: auto;
        min-width: 45%;
        /*border: 1px solid grey;*/
    }

        .blistTable td {
            white-space: nowrap;
            border: 1px solid lightgray;
        }

        .blistTable th {
            background-color: lightgray;
            white-space: nowrap;
            padding: 0px 14px 3px 14px;
            border: 1px solid lightgray;

        }

    .blistTableEdit {
        width: 40px;
        border: none !important;
    }

    .tableListDiv {
        /*margin:3em;*/
    }
    .addBlistBtn {
        font-size: x-large;
        padding-left: 1px;
    }

    #BListType td, #BListType th {
        border: 1px solid black;
    }

    #BListType th {
        background-color: deepskyblue;
    }

</style>

<h2> @Html.ActionLink(" >> Generic Index - list view", "GenericIndex")</h2>
<h2>
    @Html.ActionLink(">> ADD NEW LIST-BLOCK", "Create", new { target = "_blank" })
</h2>

<b style="background-color:yellow">Double click to modify</b>



<div id="tableListDiv" class="tableListDiv"> </div>

<script type="text/javascript">
    var LBList = @Html.Raw(Json.Encode(Model));
    listTablesByType(LBList, "tableListDiv", "ListType", ["ListItem"]);

    function listTablesByType(datasource, parentdivid, mainattr, attrtobelisted) {
        var doc = document;
        var div = doc.getElementById(parentdivid);
        var tblname = "";
        // Make BListType be the first table
        var data1 = datasource.filter(x => x.ListType == "BListType");
        var data2 = datasource.filter(x => x.ListType != "BListType");
        var datasorted = data1.concat(data2);  
        // Make tables
        $.each(datasorted, function (key, data) {
            if (data[mainattr] !== tblname) {
                // Create new table
                tblname = data[mainattr];

                // Table header
                var th = doc.createElement("th");
                th.textContent = tblname;
                th.setAttribute("class", "blistTableTh" + " hoverclass" + tblname.replace(".", ""));
                var tr = doc.createElement("tr");
                tr.appendChild(th);

                var a = doc.createElement("a");
                a.textContent = "+";
                a.setAttribute("class", "btn addBlistBtn");
                a.id = "newlistitemø" + data["ListType"];

                var tda = doc.createElement("td");
                tda.appendChild(a);
                tda.setAttribute("class", "blistTableEdit");
                tr.appendChild(tda);

                var tbl = doc.createElement("table");
                tbl.setAttribute("class", "blistTable");
                tbl.id = tblname.replace(" ", "").replace(".","");
                
                tbl.appendChild(tr);
                div.appendChild(tbl);
                // Table header finished and table defined

                // First row
                var td1 = doc.createElement("td");
                td1.textContent = data.ListItem;

                if (data.ListType == "BListType") {
                    if (data.ListItem == "BListType") {
                        td1.id = "no_editøBLTypeø" + data.Id;
                    }
                    else {
                        td1.id = "editøBLTypeø" + data.Id;
                    }
                    td1.setAttribute("class", "hoverclass" + data.ListItem.replace(" ", "").replace(".", ""));           
                }
                else {
                    td1.id = "editø" + data.Id;
                }

                var tr1 = doc.createElement("tr");
                tr1.appendChild(td1);
                tbl.appendChild(tr1);

            }
            else { // More rows
                var td1 = doc.createElement("td");
                td1.textContent = data.ListItem;
                if (data.ListType == "BListType") {
                     if (data.ListItem == "BListType") {
                        td1.id = "no_editøBLTypeø" + data.Id;
                    }
                    else {
                        td1.id = "editøBLTypeø" + data.Id;
                    }
                    td1.setAttribute("class", "hoverclass" + data.ListItem.replace(" ","").replace(".", ""));
                }
                else {
                    td1.id = "editø" + data.Id;
                }

                var tr = doc.createElement("tr");
                tr.appendChild(td1);
                var tbl = div.lastChild;
                tbl.appendChild(tr);
            }
        });
    }

    $(document).ready(function () {

        // Edit name of item by double click
        $('td[id^=editø]').dblclick(function () {
            var oldval = this.innerText;
            var id = this.id;
            this.innerText = "";
            var input = document.createElement("input");
            input.value = oldval;
            input.setAttribute("class", "form-control");


            input.onblur = function () {
                saveblistvalue(id, oldval, this.value);
            }
            this.appendChild(input);
        });

        // Add new list item by click
        $('a[id^=newlistitemø]').click(function () {
            if (window.confirm("Add item?")) {
                var id = this.id;
                // get tbl
                var tbl = document.getElementById(id).parentElement;
                var listType = id.split("ø")[1];
                var v = createListItem(listType);

                window.location.reload(false);
            }
        });

        // Hovering event
        $("[class*='hoverclass']").hover(function () { // Hovering
            var r = this.className;
            r = r.replace(".", "");
            if (r.includes(" ")) {
                r = r.split(" ")[1];
            };
            $("." + r).css("background-color", "#d4f2bf"); // Color when hovering
        }, function () { // Stop hovering
            var r = this.className;
            r = r.replace(".", "");
            var th = false; // Table header, table headers have 2 classes
            if (r.includes(" ")) {
                r = r.split(" ")[1];
                th = true;
            };
                
            if (th) {
                $("." + r).css("background-color", "transparent");
                if (this.innerHTML == "BListType") {
                    $(this).css("background-color", "deepskyblue"); // Color BlistType header
                }
                else {
                    $(this).css("background-color", "lightgray"); // Color headers
                }
            }
            else {
                if (this.innerHTML == "BListType") {
                    $("." + r).css("background-color", "deepskyblue"); // Color BlistType header
                }
                else {
                    $("." + r).css("background-color", "lightgray"); // Color headers   
                }
                $(this).css("background-color", "transparent");
            }            
        });

    });

    // Save BList value, called from double click event
    function saveblistvalue(id, oldval, newval) {
        var td = document.getElementById(id);
        td.innerHtml = "";
        td.innerText = newval;
        console.log(id);
        if (oldval != newval) {
            if (window.confirm("Save change?")) {
                var bid = id.split("ø")[1];
                if (bid == "BLType") {
                    // Change ListType Name
                    bid = id.split("ø")[2];
                    changeblisttypename(oldval, newval);
                }

                // Change BList ListItem Name
                return $.ajax({
                    type: 'POST',
                    url: '/BList/Saveblistvalue/',
                    data: {
                        id: bid, newval: newval
                    },
                    cache: false,
                    success: function () {
                        window.location.reload(true); // Refresh page
                        console.log("Changed Item Name");
                    }
                });
            }
            else {
                td.innerText = oldval;
            }

        }
    }

    function changeblisttypename(oldval, newval) {
        // Change BList ListType Name;
        return $.ajax({
            type: 'POST',
            url: '/BList/ChangeBlistTypeName/',
            data: {
                oldval: oldval, newval: newval
            },
            cache: false,
            success: function () {
                console.log("Changed Type Name");
            }
        });
    }


    function createListItem(listType) {
         $.ajax({
            type: 'POST',
            url: '/BList/CreateBlistItem/',
            data: {
                listType: listType
            },
            cache: false,
             success: function (data) {
                 return data;
            }
        });
    }

</script>