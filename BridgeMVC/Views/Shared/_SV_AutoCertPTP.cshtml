@model BridgeMVC.Models.Job
<style>
    .editableBox {
        height: 30px;
        width: 330px;
        transform: translateY(-32px);
        margin-left: 12px;
        border: none;
        background-color: rgb(255, 255, 255);
    }

    .optionBox {
        height: 36px;
    }
    .recreateprod {
        float: right;
        margin-right: 3em;
        cursor:pointer;
    }

    .ptp{
        max-width:inherit;
    }
    .bing {
        max-width: 372px;
    }
</style>


@{
    @Scripts.Render("~/bundles/jquery")
    var LProduct = ViewBag.LProduct;
    int sn = 0;
    int totalProdNo = LProduct.Count;
    var LPTP = ViewBag.LPTP;
    var LValueSource = ViewBag.LValueSource;

    //get the name of data source
    string getDataSourceName(string ptpName)
    {
        foreach (var v in LPTP)
        {
            if (v.TechParaName == ptpName)
            {
                return v.ValueSource;
            }
        }
        return "";
    }

    //list of the values for a data source
    List<string> getDropDownList(string listtype)
    {
        List<string> alist = new List<string>();
        foreach (var v in LValueSource)
        {
            if (v.ListType == listtype)
            {
                alist.Add(v.ListItem);
            }
        }
        return alist;
    }
}

<div >
    <label class="alert-danger recreateprod" id="refreshProdPtps">RE-CREATE PRODUCT</label>
</div>



<div style="float:right; margin-right:3em" class="alert-danger" id="recreateprodbtn" hidden>
    @Html.ActionLink(
        linkText: "REFRESH PRODUCT",
        actionName: "RefreshPTP",
        controllerName: "Product",
        routeValues: new {
            bridgeJobId = Model.Id,
        },
htmlAttributes: null
)
</div>

@foreach (var item in LProduct)
{
    sn = sn + 1;
    string classStr = "form-control ptp " + item.Id;
    int paraSN = 0;

    <h4 style="font-weight:bold" class="col-lg-12">Product (@sn / @totalProdNo) :</h4>
    foreach (var para in item.PTPs)
    {
        string valueinputclass = classStr + " " + paraSN;
        string valueSourceName = @getDataSourceName(@para.TechParaName);
        string divid = "divø" + para.TechParaName;
        divid = divid.Replace(" ", "-");
        divid = divid.Replace("?", "-");
        divid = divid.Replace("/", "-");
        divid = divid.Replace("(", "-");
        divid = divid.Replace(")", "-");
        divid = divid.Replace(":", "-");
        <div class="bing col-lg-5" id="@divid">
            <p>  @para.TechParaName </p>

            @if (!string.IsNullOrEmpty(valueSourceName) && valueSourceName.ToLower().Contains("dropdown_"))
            {
                <select class="@valueinputclass" id="dded-@paraSN">
                    <option selected="selected" value="@para.TechParaValue">@para.TechParaValue</option>
                    @foreach (string str in @getDropDownList(@valueSourceName))
                    {
                        <option value="@str">@str</option>
                    }
                </select>
            }
            else if (!string.IsNullOrEmpty(valueSourceName) && valueSourceName.ToLower().Contains("dropdownedit_"))
            {
                //editable dropdown box

                <div>
                    <select class="@valueinputclass" name="dded-@paraSN">
                        <option value=""></option>
                        @foreach (string str in @getDropDownList(@valueSourceName))
                        {
                            <option value="@str">@str</option>
                        }
                    </select>
                    <input value="@para.TechParaValue" class="@valueinputclass editableBox" id="dded-@paraSN" />
                </div>

                //end of editable dropdown box
            }
            else
            {
                <input value="@para.TechParaValue" class="@valueinputclass" id="dded-@paraSN"/>
            }

        </div>

        paraSN = paraSN + 1;
    }
}





<script>


    var LValueSource = @Html.Raw(Json.Encode(LValueSource));



    $(document).ready(function () {
   

        $('select[id^=dded-]').change(function () {
            var val = $('#' + this.id).find(":selected").text();
            setBackgroundColor(this.id, val);
            renderPTPeditview();
        });
        $('input[id^=dded-]').change(function () {
            var val = $('#' + this.id).val();
             setBackgroundColor(this.id, val);
            renderPTPeditview();
        });


        $('select[name^=dded-]').change(function () {
            var navn = $(this).attr('name');
            var selectedv = $(this).find(":selected").text();
            $("#" + navn).val(selectedv);
            savePTPbyClassName($(this).attr("class"), selectedv);;
        });

        renderPTPeditview();
    });


    $("#refreshProdPtps").click(function () {
        recreateptp(Job.Id);
        window.location.reload(false);
    });


    function recreateptp(id) {

        if (confirm('The existing data for the product will be removed. Continue?')) {

            //$("#recreateprodbtn").click();

            return $.ajax({
                type: 'POST',
                url: '/Product/RefreshPTP/',
                data: { bridgeJobId: Job.Id},
                cache: false,
                success: {
                  },
            });
        } else {
            // Do nothing!
        }

    }

    function renderPTPeditview() {
        $('select[id^=dded-]').each(function () {
            var val = $('#' + this.id).find(":selected").text();
            setBackgroundColor(this.id, val);
        });
        $('input[id^=dded-]').each(function () {
            var val = $('#' + this.id).val();
            setBackgroundColor(this.id, val);
        });


        $('div[id^=divø]').each(function () {
            var subdivid = this.id;
            //$('#' + subdivid).hide();
            try {
                if (subdivid.includes("_")) {
                    var ctrldivid = subdivid.split("_")[0];
                    var v = $("#" + ctrldivid + "> select").find(":selected").text();
                    console.log(subdivid);
                    var sdiv = document.getElementById(subdivid);
                    if (v != "Yes") {
                        $("#" + subdivid).css("display", "none")
                        //sdiv.setAttribute("display","block");
                    } else {
                        $("#" + subdivid).css({
                            "display": "block",
                            "margin-left": "60px",
                            "max-width": "312px",
                        });
                    }
                }
            } catch{ }
        });
    }

    function setBackgroundColor(id, val) {

        try {
            if (val.toLowerCase().includes("xx") || val == null || val == "") {
                $('#' + id).css("background-color", "#ffe9ec");
            } else {
                $('#' + id).css("background-color", "white");
            };
        } catch{ }

    }
</script>
