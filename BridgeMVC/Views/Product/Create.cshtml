@model BridgeMVC.Models.Product

@{
    Layout = "~/Views/Shared/_LayoutNoLogin.cshtml";
}

@{
    var LMainProdType = ViewBag.LMainProdType;
    var LSubProdType = ViewBag.LSubProdType;
}

<h4 style="margin-top:1px"> Add Product </h4>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Tag)
        @Html.HiddenFor(model => model.BridgeModule)
        @Html.HiddenFor(model => model.DbJobId)



        <table>
            <colgroup>
                <col span="1" style="width: 16%;">
                <col span="1" style="width: 16%;">
                <col span="1" style="width: 20%;">
                <col span="1" style="width: 16%;">
                <col span="1" style="width: 16%;">
                <col span="1" style="width: 16%;">
            </colgroup>
            <tr>
                <td>
                    Main type:
                    @Html.DropDownListFor(model => model.MainProdType, new List<SelectListItem> { new SelectListItem { Text = Model.MainProdType, Value = Model.MainProdType } }, new { @class = "form-control", id = "selectMainProdType" })
                    @Html.ValidationMessageFor(model => model.MainProdType, "", new { @class = "text-danger" })
                </td>
                <td>

                    Sub type:
                    @Html.DropDownListFor(model => model.SubProdType, new List<SelectListItem> { new SelectListItem { Text = Model.SubProdType, Value = Model.SubProdType } }, new { @class = "form-control", id = "selectSubProdType" })
                    @Html.ValidationMessageFor(model => model.SubProdType, "", new { @class = "text-danger" })
                </td>
                <td>
                    Product name:
                    @Html.EditorFor(model => model.ProdDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProdDescription, "", new { @class = "text-danger" })
                </td>

                <td>
                    <input type="submit" value="ADD" class="btn btn-info" />

                </td>
                <td>
                    @Html.ActionLink("Cancel", "IndexNonPED")
                </td>

            </tr>

        </table>



    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>

    var LMainProdType = @Html.Raw(Json.Encode(LMainProdType));
    var LSubProdType = @Html.Raw(Json.Encode(LSubProdType));


    $.each(LMainProdType, function (key, data) {
        $("#selectMainProdType").append(new Option(data.ListItem, data.ListItem));
    });

    var mval = $("#selectMainProdType :selected").text();
    $.each(LSubProdType, function (key, data) {
        if (data.UpperLvl == mval) {
            $("#selectSubProdType").append(new Option(data.ListItem, data.ListItem));
        }
    });

    //When main prodtype changes, refesh the sub prod type.
    $("#selectMainProdType").on("change", function () {
        var mval = $("#selectMainProdType :selected").text();

        $('#selectSubProdType option').each(function () {
            if ($(this).val() != 'X') {
                $(this).remove();
            }
        });

        $("#selectSubProdType option").remove();
        $.each(LSubProdType, function (key, data) {
            if (data.UpperLvl == mval) {
                $("#selectSubProdType").append(new Option(data.ListItem, data.ListItem));
            }
        });
    });















</script>
