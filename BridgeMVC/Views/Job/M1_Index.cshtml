@model IEnumerable<BridgeMVC.Models.Job>

@{
    /**/

    ViewBag.Title = "Index";
    string BridgeLastUsed = (string)Session["BridgeModule"];
    string UserSignature = (string)Session["UserSignature"];

    var LUser = ViewBag.LUser;
    var US = ViewBag.userSig;


    IDictionary<string, string> styleDict = new Dictionary<string, string>();
    styleDict.Add("Y", "background-color:seagreen; color:transparent; cursor: pointer; ");
    styleDict.Add("N", "background-color:gainsboro; color:transparent; cursor: pointer; ");
    styleDict.Add("TASK", "background-color:DodgerBlue; color:transparent; cursor: pointer; ");
    styleDict.Add("Default", "background-color:gainsboro; color:transparent; cursor: pointer; ");


    string getValuefromDict(string taskVal)
    {
        if (string.IsNullOrEmpty(taskVal))
        {
            return styleDict["Default"];
        }
        else
        {
            return styleDict[taskVal];
        }
    }

}

<style>
    .hoverRow p {
        display: block;
        overflow: hidden;
        text-overflow:clip;
        white-space: nowrap;
    
        max-width:480px;
    }

    .hoverRow td:hover p {
        white-space: normal;
        word-wrap: normal;
        word-break: break-all;
    }

    .table th, td {
        border-radius: 25px;
        border: 1px solid white;
    }


</style>

<h2>
    MY BRIDGE JOBLIST
    @*<p class="btn btn-subtle" style="float:right; border:none" hidden>
            @Html.ActionLink("Create New", "Create")
        </p>*@
</h2>
<hr />

@using (Html.BeginForm())
{
<table>
    <colgroup>
        <col span="1" style="width: 12%;">
        <col span="1" style="width: 76%;">
        <col span="1" style="width: 12%;">

    </colgroup>
    <tr>
        <td>
            @Html.TextBox("SearchString", null, new { @class = "form-control" })
            
        </td>
        <td>
            <input type="submit" value="Search" />
        </td>
        <td style="float:right">
            <select id="userSig" name="userSig" class="form-control"></select>
        </td>
        <td>
            <input type="submit" value="Change User" />
        </td>
    </tr>

</table>

}
<br />

<table class="table table-mid-align-rows hoverRow" style="table-layout:fixed;">
    <colgroup>
        <col span="1" style="width: 20%;">
        <col span="1" style="width: 20%;">
        <col span="1" style="width: 20%;">
        <col span="1" style="max-width: 50px; width:49px">
        <col span="1" style="max-width: 50px; width:49px">
        <col span="1" style="max-width: 50px; width:49px">
        <col span="1" style="max-width: 50px; width:49px">
        <col span="1" style="width: 30%;">
    </colgroup>
    <tr>
        <th style="border-top:none">           JOB ID       </th>
        <th style="border-top:none">            CUSTOMER        </th>
        <th style="border-top:none">            PROJECT NAME    </th>
        <th style="border-top:none">           FEE       </th>
        <th style="border-top:none">           AGR       </th>
        <th style="border-top:none">           EXE        </th>
        <th style="border-top:none">           FNL        </th>
        <th style="border-top:none">          IORA STATUS    </th>
        @*<th>            @Html.DisplayNameFor(model => model.TaskHandler)        </th>
            <th>            @Html.DisplayNameFor(model => model.Completed)        </th>*@

    </tr>
    
    @foreach (var item in Model)
    {
        string npsJobName = item.NpsJobName;
        if (string.IsNullOrEmpty(npsJobName))
        {
            npsJobName = item.ProdDescription;
        }


        string styleT1 = getValuefromDict(item.Task1);
        string styleT2 = getValuefromDict(item.Task2);
        string styleT3 = getValuefromDict(item.Task3);
        string styleT4 = getValuefromDict(item.Task4);

        string editlink1 = "'/Job/CommonTask1/" + item.Id + "'";
        string editlink2 = "'/Job/IsIORAExisting/" + item.Id + "'";

        string editlink3 = "'/Job/CommonTask3/" + item.Id + "'";
        string editlink4 = "'/Job/CommonTask4/" + item.Id + "'";

        string t2tag = "T2TAG" + item.Task2 + "T2TAG";
    <tr>
        <td>
            <p>
                @Html.DisplayFor(modelItem => item.NpsJobId)
            </p>
        </td>
        <td>
            <p>  @Html.DisplayFor(modelItem => item.CustomerName)</p>
</td>
        <td>
            <p>
                @npsJobName
            </p>
        </td>
        <td style="@styleT1;" onclick="location.href=@editlink1">
            @Html.DisplayFor(modelItem => item.Task1)
        </td>
        <td style="@styleT2" onclick="location.href=@editlink2" tag="@t2tag">
            @Html.DisplayFor(modelItem => item.Task2)
        </td>
        <td style="@styleT3" onclick="location.href=@editlink3">
            @Html.DisplayFor(modelItem => item.Task3)
        </td>
        <td style="@styleT4" onclick="location.href=@editlink4">
            @Html.DisplayFor(modelItem => item.Task4)
        </td>
        <td>
            <p>
                @if (!string.IsNullOrEmpty(item.IoraDbId))
                {
                    @Html.DisplayFor(modelItem => item.IoraDbId)
                }
            </p>
        </td>

    </tr>
    }

</table>

<br /><br /><br />
<hr />
<footer>
    @{
        string colorY = styleDict["Y"] + "width:40px;border: none";
        string colorN = "background-color:pink; color:transparent; cursor: pointer;" + "width:40px;border: none";
        string colorTASK = styleDict["TASK"] + "width:40px; border: none";
        string colorYellow= "background-color:gold; color:transparent; cursor: pointer;" + "width:40px;border: none";
        string colorDefault = styleDict["Default"] + "width:40px; border: none";
        string styleTxt = "border-radius: 0; border: none";

    }
    <table class="table table-mid-align-rows hoverRow" style="table-layout:fixed;">
  
        <tr>
            <td style="@colorY"></td>
            <td style="@styleTxt">Task is completed</td>
            <td style="@colorTASK"></td>
            <td style="@styleTxt">Task is assigned to you (ongoing)</td>
            <td style="@colorN"></td>
            <td style="@styleTxt">IORA pending verification</td>
            <td style="@colorYellow"></td>
            <td style="@styleTxt">IORA pending approval / HO job</td>
            <td style="@colorDefault"></td>
            <td style="@styleTxt">Task is not assigned</td>
        </tr>
    </table>
</footer>

<script>
    var LUser = @Html.Raw(Json.Encode(LUser));
    var us = @Html.Raw(Json.Encode(US));

    console.log(LUser);

    $("#userSig").append(new Option(us, us));

    $.each(LUser, function (key, data) {
        $("#userSig").append(new Option(data.Signature, data.Signature));
    });

    //$("#userSig").on("change", function () {
    //    var mval = $("#selectMainProdType :selected").text();

    //});


</script>