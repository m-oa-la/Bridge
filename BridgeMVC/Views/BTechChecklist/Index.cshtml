@model IEnumerable<BridgeMVC.Models.BTechChecklist>
@{ 
 
    var sn = 0;
}
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm())
{
<p>
    <button type="submit" name="searchString" value="Winch for life saving">Winch</button>
    <button type="submit" name="searchString" value="Launching appliance for life saving">Davit</button>
    <button type="submit" name="searchString" value="Release mechanism for life saving">Release mechanism</button>
    <button type="submit" name="searchString" value="renewal">Renewal/Modification</button>
    <button type="submit" name="searchString" value="all" class="btn-default">All</button>

</p>
}
<table class="table">
    <colgroup>
        <col span="1" style="width: 10%;">
        <col span="1" style="width: 10%;">
        <col span="1" style="width: 60%;">
        <col span="1" style="width: 10%">
        <col span="1" style="width: 10%">
        <col span="1" style="width: 20px;">
    </colgroup>
    <tr>

        <th>
            @Html.DisplayNameFor(model => model.Subject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubProdType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GudianceNote)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RuleRef)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Condition)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        sn += 1;
        <tr>
            <td class="form-group" id="Subject_@item.Id">
                @Html.EditorFor(modelItem => item.Subject, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="form-group" id="SubProdType_@item.Id">
                @Html.DropDownListFor(modelItem => item.SubProdType, new List<SelectListItem> { new SelectListItem { Text = item.SubProdType, Value = item.SubProdType } }, new { @class = "form-control", id = "selectSupProdType" + sn })

                @*@Html.EditorFor(modelItem => item.SubProdType, new { htmlAttributes = new { @class = "form-control" } })*@
            </td>
            <td class="form-group" id="GN_@item.Id">
                @Html.EditorFor(modelItem => item.GudianceNote, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="form-group" id="RuleRef_@item.Id">
                @Html.EditorFor(modelItem => item.RuleRef, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="form-group" id="Condition_@item.Id">
                @Html.EditorFor(modelItem => item.Condition, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownListFor(modelItem => item.Condition, new List<SelectListItem> { new SelectListItem { Text = item.Condition, Value = item.Condition } }, new { @class = "form-control", id = "selectCondition" + sn })*@

            </td>
            <td>
                <button onclick="saveTCItem('@item.Id')"> Save </button>

            </td>
        </tr>
    }
</table>
<script>
    var sn = @sn;
    console.log(sn);


    function saveTCItem(itemId) {
        console.log(itemId);
        var Subject = $("#Subject_" + itemId).children().eq(0).val();
        var SubProdType = $("#SubProdType_" + itemId).children().eq(0).val();
        var GudianceNote = $("#GN_" + itemId).children().eq(0).val();
        var RuleRef = $("#RuleRef_" + itemId).children().eq(0).val();
        var Condition = $("#Condition_" + itemId).children().eq(0).val();

        console.log(Subject);
        console.log(SubProdType);
        console.log(GudianceNote);
        console.log(RuleRef);
        console.log(Condition);

        callSaveBTCApi(itemId, Subject, SubProdType, GudianceNote, RuleRef, Condition)

    }

    function callSaveBTCApi(itemId, Subject, SubProdType, GudianceNote, RuleRef, Condition) {
        $.ajax(
            {
                type: 'GET',
                url: '/BTechChecklist/SaveBTCItem',
                data: { itemId: itemId, Subject: Subject, SubProdType: SubProdType, GudianceNote: GudianceNote, RuleRef: RuleRef, Condition: Condition },

                success: function (data) {
                    alert(data);
                    console.log(data);
                },
                error: function (e) {
                    alert('Error: ' + e);

                }
            });
    }


    for (var i = 1; i < sn; i += 1) {
        $("#selectSupProdType" + i).append(new Option("All", "All"));
        $("#selectSupProdType" + i).append(new Option("Winch for life saving", "Winch for life saving"));
        $("#selectSupProdType" + i).append(new Option("Release mechanism for life saving", "Release mechanism for life saving"));
        $("#selectSupProdType" + i).append(new Option("Launching appliance for life saving", "Launching appliance for life saving"));
        //$("#selectCondition" + i).append(new Option("-", ""));
        //$("#selectCondition" + i).append(new Option("Renewal or Modification", ""));
    }


</script>