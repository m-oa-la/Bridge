@model BridgeMVC.Models.BingLSACert

@{ 
    var Job = ViewBag.Job;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BingLSACert</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.BridgeModule, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BridgeModule, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BridgeModule, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BookMarkName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BookMarkName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BookMarkName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Chapter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Chapter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Chapter, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Formula, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Formula, new { htmlAttributes = new { @class = "form-control", style = "height:100px" } })
            @Html.ValidationMessageFor(model => model.Formula, "", new { @class = "text-danger" })
        </div>
    </div>

    <input value="Test Formula" class="btn btn-info" id="toTestFormula" style="float:right" readonly />
    <div class="form-group">
        <textarea name="Text1" cols="100" rows="5" id="testFormulaResult" class="form-control"></textarea>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control", style = "height:100px" } })
            @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
        </div>
    </div>
    <input value="Test Condition" class="btn btn-info" id="toTestCondition" style="float:right" readonly />
    <div class="form-group">
        <textarea name="Text1" cols="100" rows="5" id="testConditionResult" class="form-control"></textarea>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
        var Job = @Html.Raw(Json.Encode(Job));

    $("#toTestFormula").click(function () {
        $("#testFormulaResult").html(eval($("#Formula").val()));
    });

    $("#toTestCondition").click(function () {
        $("#testConditionResult").html(eval($("#Condition").val()));
    });


</script>