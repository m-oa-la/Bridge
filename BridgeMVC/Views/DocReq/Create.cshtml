@model BridgeMVC.Models.DocReq

@{
    @Scripts.Render("~/scripts/jquery-ui.min.js")
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bridge</title>

    <style>
        body {
            font: Avenir Next;
        }
    </style>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Tag)
        @Html.HiddenFor(model => model.BridgeModule)
        @Html.HiddenFor(model => model.DbJobId)
        @Html.HiddenFor(model => model.NpsJobId)


        <table>
            <colgroup>
                <col span="1" style="width: 80%;">
                <col span="1" style="width: 10%;">
                <col span="1" style="width: 10%;">
            </colgroup>
            <tr>
                <td>
                    @Html.EditorFor(model => model.DocReqItem, new { htmlAttributes = new { @class = "form-control", id = "DocReqItem" } })
                    @Html.ValidationMessageFor(model => model.DocReqItem, "", new { @class = "text-danger" })
                </td>
                <td>
                    <input type="submit" value="ADD" class="btn btn-info" />

                </td>
                <td class="btn btn-info">
                    @Html.ActionLink("Cancel", "Index")
                </td>

            </tr>

        </table>



    </div>
}



<script>

    $(function () {
        var myValue =  @Html.Raw(Json.Encode(@ViewBag.DocReqSelectList));
        var attrName = "ListItem";

         var availableTags = [];

        $.each(myValue, function () {

            availableTags.push($(this).attr(attrName))
        });


        $("#DocReqItem").autocomplete({
            source: availableTags
        });
    });
</script>
