@model BridgeMVC.Models.IORA

@{
    ViewBag.Title = "Create";
}

<h2>IORA for this job does not exist. Please check the information below and create one.</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>IORA</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.BridgeModule, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BridgeModule, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BridgeModule, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NpsJobID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NpsJobID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NpsJobID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.DbJobId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DbJobId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DbJobId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SellingContactSig, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SellingContactSig, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SellingContactSig, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BuyingContactSig, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BuyingContactSig, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BuyingContactSig, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

